var $ = require('jquery');
var assert = require('ls-assert').assert;

const template = (id) => `
	<button id="btn-${id}-dropconfirm"
		type="button"
		class="btn dropdown-toggle dropconfirm-open"
		data-toggle="dropdown"
		aria-haspopup="true"
		aria-expanded="false">
	</button>
	<div class="dropdown-menu dropconfirm-menu"
		aria-labelledby="btn-${id}-dropconfirm">
		<div class="dropconfirm-content"></div>
		<button type="button" class="btn btn-primary dropconfirm-confirm">
			<i class="fas fa-check"></i>
		</button>
		<button type="button" class="btn btn-danger dropconfirm-cancel">
			<i class="fas fa-times"></i>
		</button>
	</div>
`;

class DropConfirm {
	constructor(container) {
		assert(container.id !== '', 'Container must have an ID.');

		this.container = $(container);
		this.container
			.addClass('dropdown dropconfirm')
			.html(template(this.container.attr('id')));

		// Attach show/hide event listeners.
		this.container
			.on(
				'show.bs.dropdown',
				() => this.trigger('show')
			)
			.on(
				'hide.bs.dropdown',
				() => this.trigger('hide')
			);

		// Attach button event listeners.
		this.container.find('.dropconfirm-confirm').on(
			'click',
			() => {
				this.trigger('confirm');
			}
		);
		this.container.find('.dropconfirm-cancel').on(
			'click',
			() => this.trigger('cancel')
		);
	}

	set_button_html(html) {
		this.container.find('.dropconfirm-open').html(html);
	}

	set_content_html(html) {
		this.container.find('.dropconfirm-content').html(html);
	}

	trigger(name, data) {
		this.container.trigger(
			`component.dropconfirm.${name}`,
			data
		);
	}
}
exports.DropConfirm = DropConfirm;
