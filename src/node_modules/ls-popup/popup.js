/*
*  A class for handling LibreSignage web interface popups.
*  To use this class:
*    1. Include the SCSS file from './css/_popup.scss'.
*    2. Create a div with the class 'popup'.
*       Add the popup content directly to this div. The Popup class will
*       automatically wrap the content with the required HTML.
*    3. Call the Popup class constructor with the assigned HTML ID
*       somewhere in you JS.
*    4. Call Popup.visible(state) where state is either true or false.
*/

var $ = require('jquery');
var assert = require('ls-assert').assert;

const wrapper = content => `
<div class="row popup-bar-row">
	<div class="col-12 text-right popup-bar">
		<i class="fas fa-times-circle link-nostyle popup-close"></i>
	</div>
</div>
<div class="row popup-content-row">
	<div class="col-12 container popup-content">
		${content}
	</div>
</div>	
`;

class Popup {
	constructor(element) {
		this.element = $(element);

		// Wrap the popup content in the wrapper HTML.
		this.element.html(wrapper(this.element.html()));

		this.element.find('.popup-close').click(() => {
			this.visible(false);
			this.trigger('close');
		});
	}

	visible(state) {
		/*
		*  Show or hide the popup.
		*    state === true  => Show popup.
		*    state === false => Hide popup.
		*/
		this.element.css('display', state ? 'flex' : 'none');
	}

	trigger(name) {
		this.element.trigger(`component.popup.${name}`);
	}
}
exports.Popup = Popup;
